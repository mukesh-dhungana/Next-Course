import Head from "next/head";
import styles from "../styles/Home.module.css";
import Post from "../components/Post";
import { useSelector, useDispatch } from "react-redux";
import * as actionTypes from "../store/actiontypes";
import { useState } from "react";
import Form from "../components/Form";

export default function Home() {
  const dispatch = useDispatch();
  const countries = useSelector((state) => state.countries);
  const user = useSelector((state) => state.user);
  const [showAddForm, setShowAddForm] = useState(false);
  const [showEditForm, setShowEditForm] = useState(false);
  const [countryDetails, setCountryDetails] = useState({});

  const handleDelete = (countryId) => {
    dispatch({ type: actionTypes.DELETE_COUNTRY, id: countryId });
  };

  const handleAddSubmit = (e) => {
    e.preventDefault();
    setShowAddForm(false);
    dispatch({
      type: actionTypes.ADD_COUNTRY,
      payload: {
        ...countryDetails,
        alpha3Code: countryDetails.name.slice(0, 3),
      },
    });
    setCountryDetails({});
  };

  const handleEditSubmit = (e) => {
    e.preventDefault();
    setShowEditForm(false);
    dispatch({
      type: actionTypes.EDIT_COUNTRY,
      payload: {
        alpha3Code: countryDetails.alpha3Code,
        name: countryDetails.name,
        population: countryDetails.population,
      },
    });

    setCountryDetails({});
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <h1>All Posts</h1>
      </header>

      <main className={styles.main}>
        <button className={styles.button} onClick={() => setShowAddForm(true)}>
          Add Post
        </button>
        {(showAddForm || showEditForm) && (
          <Form
            handleSubmit={showAddForm ? handleAddSubmit : handleEditSubmit}
            countryDetails={countryDetails}
            setCountryDetails={setCountryDetails}
          />
        )}

        {countries.map((country) => (
          <Post
            key={country.alpha3Code}
            country={country}
            handleDelete={() => handleDelete(country.alpha3Code)}
            handleEdit={() => {
              setCountryDetails(country);
              setShowEditForm(true);
            }}
          />
        ))}
      </main>
    </div>
  );
}

export async function getStaticProps(ctx) {
  const res = await fetch(
    "https://restcountries.eu/rest/v2/regionalbloc/saarc"
  );
  const countries = await res.json();

  return {
    props: {
      initialReduxState: { countries },
    },
  };
}
