import { wrapper } from "../store";
import { useSelector, useDispatch } from "react-redux";
import styles from "../styles/Home.module.css";
import Head from "next/head";
import { useState } from "react";
import Post from "../components/Post";
import Form from "../components/Form";
import {
  saveCountry,
  updateCountry,
  deleteCountry,
} from "../store/actions/index";
import * as actionTypes from "../store/actions/actionTypes";

export default function Home() {
  const countries = useSelector((state) => state.country.countriesList);
  const dispatch = useDispatch();
  const [showAddForm, setShowAddForm] = useState(false);
  const [showEditForm, setShowEditForm] = useState(false);
  const [countryDetails, setCountryDetails] = useState({});

  const handleDelete = async (countryId) => {
    dispatch(deleteCountry(countryId));
  };

  const handleAddSubmit = async (e) => {
    e.preventDefault();

    const newCountry = {
      ...countryDetails,
      id: countryDetails.name.slice(0, 3),
    };

    dispatch(saveCountry(newCountry));
    setCountryDetails({});
    setShowAddForm(false);
  };

  const handleEditSubmit = async (e) => {
    e.preventDefault();

    const editedCountry = {
      id: countryDetails.id,
      name: countryDetails.name,
      population: countryDetails.population,
    };

    dispatch(updateCountry(editedCountry));

    setCountryDetails({});
    setShowEditForm(false);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <h1>All Posts</h1>
      </header>

      <main className={styles.main}>
        <button className={styles.button} onClick={() => setShowAddForm(true)}>
          Add Post
        </button>
        {(showAddForm || showEditForm) && (
          <Form
            handleSubmit={showAddForm ? handleAddSubmit : handleEditSubmit}
            countryDetails={countryDetails}
            setCountryDetails={setCountryDetails}
          />
        )}

        {countries.map((country) => (
          <Post
            key={country.id}
            country={country}
            handleDelete={() => handleDelete(country.id)}
            handleEdit={() => {
              setCountryDetails(country);
              setShowEditForm(true);
            }}
          />
        ))}
      </main>
    </div>
  );
}

export const getStaticProps = wrapper.getStaticProps(async ({ store }) => {
  const res = await fetch("http://localhost:3000/countries");
  const countries = await res.json();

  store.dispatch({ type: actionTypes.SET_COUNTRY, payload: countries });
});
